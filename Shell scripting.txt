## first line in the bash script will be a shebang character that gives the path of the interpreter

#! bin/bash

==> # It is a symbol of comment

#######################################################################################################################################################################

==> Variables

skill ="DEvOPS"
echo $skill

#######################################################################################################################################################################

Variables in command line arguments    {We can only use 1-9}

./4_args.sh Linux shell Powershell Ansible

$0 => ./4_args.sh             ($0 is by default the name of the bash script)
$0 => Linux 
$0 => Powershell 
$0 => Ansible

#######################################################################################################################################################################

Single quotes will print $ as it is
\ ==> the next charachter's special vaule will be ignored
#######################################################################################################################################################################

Memory= "free -m"
echo $Memory ==> Memory
Memory= `free-m`     (backticks)   {Now it will show the value of the command}
#######################################################################################################################################################################
==> Steps to  make a variable permanent

1. vim /etc/profile
2. goto the end of the file and add
export SEASON="SUMMER"
#######################################################################################################################################################################
==> User Input

read SKILL
echo "your $SKILL is in high demand"
1. read -p username        {prompt}
2. read  -sp passwd        {Nobody can see}
#######################################################################################################################################################################
##### If else

#!/bin/bash

value=$(ip addr show | grep -v LOOPBACK | grep -ic mtu)

if [ $value -eq 1 ]
then
  echo "1 Active Network Interface found."
elif [ $value -gt 1 ]
then
  echo "Found Multiple active Interface."
else
  echo "No Active interface found."
fi

#######################################################################################################################################################################
## To run a script automatically every minute

We want to run this script every minute

#!/bin/bash

echo "#####################################################"
date 
ls /var/run/httpd/httpd.pid &> /dev/null

if [ $? -eq 0 ]
then
   echo "Httpd process is running."
else
   echo "Httpd process is NOT Running."
   echo "Starting the process"
   systemctl start httpd 
   if [ $? -eq 0 ]
   then
      echo "Process started successfully."
   else
      echo "Process Starting Failed, contact the admin."
   fi
fi
echo "#####################################################"
echo 

--> Run ==crontab -e                                               {Cron jobs are scheduled tasks}
After this vim editor will open

# MM HH DOM mm DOW COMMAND
# 30 20 * * 1-5 COMMAND                        {Run job at 8:30 PM every day monday to friday}
* * * * * /opt/scripts/11_mount.sh                

#######################################################################################################################################################################

##FOR

#!/bin/bash

MYUSERS="alpha beta gamma"

for usr in $MYUSERS
do 
   echo "Adding user $usr."
   useradd $usr
   id $usr
   echo "#####################################"
done
#######################################################################################################################################################################

##WHILE

#!/bin/bash

counter=2

while true
do
  echo "Looping...."
  echo "Value of counter is $counter."
  counter=$(( $counter * 2 ))
  sleep 1
done

echo "Out of the loop"

